name: Deploy (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Write SSH key from secret to a file and lock perms
      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/frostline_key
          chmod 600 ~/.ssh/frostline_key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Deploy to Frostline server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}        # e.g., root
          SSH_HOST: ${{ secrets.SSH_HOST }}        # e.g., 5.78.137.95
          SSH_PORT: ${{ secrets.SSH_PORT }}        # e.g., 22
          APP_PATH: ${{ secrets.APP_PATH }}        # e.g., /var/www/frostline
          PM2_APP:  ${{ secrets.PM2_APP }}         # e.g., frostline
          GIT_URL:  ${{ secrets.GIT_URL }}         # e.g., https://github.com/thegunfirm/FrostLine.git
        run: |
          set -e
          echo "Deploying to $SSH_USER@$SSH_HOST:${SSH_PORT:-22} ..."
          ssh -i ~/.ssh/frostline_key -o StrictHostKeyChecking=no -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" bash -s << 'EOSH'
          set -e
          mkdir -p "$APP_PATH"
          if [ ! -d "$APP_PATH/.git" ]; then
            git clone "$GIT_URL" "$APP_PATH"
          fi
          cd "$APP_PATH"
          git pull --ff-only || true

          # Install Node.js if missing
          if ! command -v node >/dev/null 2>&1; then
            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            apt-get install -y nodejs
          fi

          npm ci --omit=dev
          npm run build

          # Install PM2 if missing, then reload/start app
          if ! command -v pm2 >/dev/null 2>&1; then
            npm install -g pm2
          fi
          pm2 describe "$PM2_APP" >/dev/null 2>&1 && pm2 reload "$PM2_APP" || pm2 start dist/index.js --name "$PM2_APP"
          pm2 save
          EOSH
